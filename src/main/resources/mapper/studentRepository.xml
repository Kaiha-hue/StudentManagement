<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

  <!--  受講生の全件検索 -->
  <select id="search" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students
  </select>

  <!--  受講生の検索 -->
  <select id="searchStudent" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students WHERE id = #{id}
  </select>

  <!-- 受講生コース情報の全件検索 -->
  <select id="searchStudentCourseList" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM students_courses
  </select>

  <!-- 受講生IDに紐づく受講生コース情報を検索 -->
  <select id="searchStudentsCourse" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM students_courses WHERE student_id = #{id}
  </select>

  <!-- 受講生の新規登録 -->
  <insert id="registerStudent" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students (name, nickname, email, address, age, gender, remark, is_deleted)
    VALUES (#{name}, #{nickname}, #{email}, #{address}, #{age}, #{gender}, #{remark}, false)
  </insert>

  <!-- 受講生コース情報の新規登録 -->
  <insert id="registerStudentsCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students_courses (student_id, course_name, course_start_at, course_end_at)
    VALUES (#{studentId}, #{courseName}, #{courseStartAt}, #{courseEndAt})
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent">
    UPDATE students
    SET name = #{student.name},
    nickname = #{student.nickname},
    email = #{student.email},
    address = #{student.address},
    age = #{student.age},
    gender = #{student.gender},
    remark = #{student.remark},
    is_deleted = #{student.isDeleted}
    WHERE id = #{student.id}
  </update>

  <!-- 受講生コース情報の更新 -->
  <update id="updateStudentsCourse">
    UPDATE students_courses
    SET course_name = #{courseName},
    course_start_at = COALESCE(#{courseStartAt}, course_start_at),
    course_end_at = COALESCE(#{courseEndAt}, course_end_at)
    WHERE id = #{id}
  </update>

  <!-- 受講生の削除 -->
  <delete id="deleteStudent">
    DELETE FROM students WHERE id = #{id}
  </delete>

  <!-- 名前もしくは年齢での受講生検索（完全一致） -->
  <select id="searchByNameOrAge" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students
    WHERE
    (#{name} IS NOT NULL AND name = #{name})
    OR
    (#{age} IS NOT NULL AND age = #{age})
  </select>

  <!-- course_statusesテーブルからコース名とステータスを取得 -->
  <select id="getAllCourseStatuses" resultType="raisetech.StudentManagement.data.CourseStatus">
    SELECT course_name, status
    FROM course_statuses
  </select>
</mapper>